<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="btnDiretorio.BackgroundImage" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>